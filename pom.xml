<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>kr.co.redbrush.test</groupId>
	<artifactId>gatling-realtime-monitoring</artifactId>
	<version>1.0-SNAPSHOT</version>

	<properties>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<scala.version>2.12.3</scala.version>
		<encoding>UTF-8</encoding>

		<gatling.version>2.3.0</gatling.version>
        <gatling-plugin.version>2.2.4</gatling-plugin.version>

		<scala-maven-plugin.version>3.2.2</scala-maven-plugin.version>

        <gson.version>2.8.2</gson.version>
        <sentry.version>1.6.8</sentry.version>
        <janino.version>3.0.8</janino.version>

        <run.command>sh</run.command>
        <run.command.additional.arg />
        <server.startup.script>startup.sh</server.startup.script>
        <server.shutdown.script>shutdown.sh</server.shutdown.script>
	</properties>

    <profiles>
        <profile>
            <id>linux</id>
            <properties>
                <run.command>sh</run.command>
                <run.command.additional.arg />
                <server.startup.script>startup.sh</server.startup.script>
                <server.shutdown.script>shutdown.sh</server.shutdown.script>
            </properties>
        </profile>
        <profile>
            <id>window</id>
            <properties>
                <run.command>cmd</run.command>
                <run.command.additional.arg>/c</run.command.additional.arg>
                <server.startup.script>startup.bat</server.startup.script>
                <server.shutdown.script>shutdown.bat</server.shutdown.script>
            </properties>
        </profile>
    </profiles>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>io.gatling</groupId>
				<artifactId>gatling-app</artifactId>
				<version>${gatling.version}</version>
			</dependency>
			<dependency>
				<groupId>io.gatling</groupId>
				<artifactId>gatling-recorder</artifactId>
				<version>${gatling.version}</version>
			</dependency>
			<dependency>
				<groupId>io.gatling.highcharts</groupId>
				<artifactId>gatling-charts-highcharts</artifactId>
				<version>${gatling.version}</version>
			</dependency>
			<dependency>
				<groupId>org.scala-lang</groupId>
				<artifactId>scala-library</artifactId>
				<version>${scala.version}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>io.gatling.highcharts</groupId>
			<artifactId>gatling-charts-highcharts</artifactId>
		</dependency>
		<dependency>
			<groupId>io.gatling</groupId>
			<artifactId>gatling-app</artifactId>
		</dependency>
		<dependency>
			<groupId>io.gatling</groupId>
			<artifactId>gatling-recorder</artifactId>
		</dependency>
		<dependency>
			<groupId>org.scala-lang</groupId>
			<artifactId>scala-library</artifactId>
		</dependency>

        <!-- https://mvnrepository.com/artifact/com.google.code.gson/gson -->
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>${gson.version}</version>
        </dependency>
        <dependency>
            <groupId>io.sentry</groupId>
            <artifactId>sentry-logback</artifactId>
            <version>${sentry.version}</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.codehaus.janino/janino -->
        <dependency>
            <groupId>org.codehaus.janino</groupId>
            <artifactId>janino</artifactId>
            <version>${janino.version}</version>
        </dependency>
    </dependencies>

	<build>
		<testSourceDirectory>src/test/scala</testSourceDirectory>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>net.alchim31.maven</groupId>
					<artifactId>scala-maven-plugin</artifactId>
					<version>${scala-maven-plugin.version}</version>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
            <plugin>
                <groupId>io.gatling</groupId>
                <artifactId>gatling-maven-plugin</artifactId>
                <version>${gatling-plugin.version}</version>
                <executions>
                    <execution>
                        <id>gatling-test</id>
                        <phase>integration-test</phase>
                        <goals>
                            <goal>test</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
				<groupId>net.alchim31.maven</groupId>
				<artifactId>scala-maven-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>testCompile</goal>
						</goals>
						<!--
						    Due to using scalac 2.12, Y option doesn't support anymore.
						    According to https://github.com/gatling/gatling/issues/3361 Changed Y options to J
						-->
						<configuration>
							<args>
								<arg>-Jbackend:GenBCode</arg>
								<arg>-Jdelambdafy:method</arg>
								<arg>-target:jvm-1.8</arg>
								<arg>-deprecation</arg>
								<arg>-feature</arg>
								<arg>-unchecked</arg>
								<arg>-language:implicitConversions</arg>
								<arg>-language:postfixOps</arg>
							</args>
						</configuration>
					</execution>
				</executions>
			</plugin>
            <!--
                In order to run socket-io server, you need to install npm and node first.
                Then install socket.io in global.

                $ npm install -g socket.io

                And, link socket.io in the src/test/java/resources/server.

                $ cd src/test/java/resources/server
                $ npm link socket.io

                For background running of the server you need to install forever.

                $ npm install -g forever
            -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>npm-install-forever</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>npm</executable>
                            <workingDirectory>src/test/resources/server</workingDirectory>
                            <arguments>
                                <argument>install</argument>
                                <argument>forever</argument>
                                <argument>-g</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>npm-install-json-server</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>npm</executable>
                            <workingDirectory>src/test/resources/server</workingDirectory>
                            <arguments>
                                <argument>install</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>start-fake-api-server</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>${run.command}</executable>
                            <workingDirectory>src/test/resources/server</workingDirectory>
                            <arguments>
                                <argument>${server.startup.script}</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>stop-socket-io-server</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>${run.command}</executable>
                            <workingDirectory>src/test/resources/server</workingDirectory>
                            <arguments>
                                <argument>${server.shutdown.script}</argument>
                            </arguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
		</plugins>
	</build>
</project>
